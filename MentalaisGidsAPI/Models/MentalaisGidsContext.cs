// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace MentalaisGidsAPI.Models;

public partial class MentalaisGidsContext : DbContext
{
    public MentalaisGidsContext(DbContextOptions<MentalaisGidsContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Atbilde> Atbilde { get; set; }

    public virtual DbSet<Dialogs> Dialogs { get; set; }

    public virtual DbSet<Jautajums> Jautajums { get; set; }

    public virtual DbSet<Lietotajs> Lietotajs { get; set; }

    public virtual DbSet<LietotajsLoma> LietotajsLoma { get; set; }

    public virtual DbSet<LietotajsRakstsKomentars> LietotajsRakstsKomentars { get; set; }

    public virtual DbSet<LietotajsRakstsVertejums> LietotajsRakstsVertejums { get; set; }

    public virtual DbSet<LietotajsSpecialists> LietotajsSpecialists { get; set; }

    public virtual DbSet<LietotajsSpecialistsVertejums> LietotajsSpecialistsVertejums { get; set; }

    public virtual DbSet<Loma> Loma { get; set; }

    public virtual DbSet<Nodarbiba> Nodarbiba { get; set; }

    public virtual DbSet<Nozare> Nozare { get; set; }

    public virtual DbSet<Problema> Problema { get; set; }

    public virtual DbSet<Raksts> Raksts { get; set; }

    public virtual DbSet<SajutuNovertejums> SajutuNovertejums { get; set; }

    public virtual DbSet<Tests> Tests { get; set; }

    public virtual DbSet<Zina> Zina { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Atbilde>(entity =>
        {
            entity.HasKey(e => e.AtbildeID).HasName("PK__Atbilde__12BB1745F16AF3A1");

            entity.Property(e => e.Saturs)
                .IsRequired()
                .HasColumnType("text");

            entity.HasOne(d => d.Jautajums).WithMany(p => p.Atbilde)
                .HasForeignKey(d => d.JautajumsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Atbilde__Jautaju__6FE99F9F");

            entity.HasOne(d => d.Problema).WithMany(p => p.Atbilde)
                .HasForeignKey(d => d.ProblemaID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Atbilde__Problem__6EF57B66");
        });

        modelBuilder.Entity<Dialogs>(entity =>
        {
            entity.HasKey(e => e.DialogsID).HasName("PK__Dialogs__CD256F28F68668B4");

            entity.HasOne(d => d.Lietotajs).WithMany(p => p.DialogsLietotajs)
                .HasForeignKey(d => d.LietotajsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Dialogs__Lietota__46E78A0C");

            entity.HasOne(d => d.Specialists).WithMany(p => p.DialogsSpecialists)
                .HasForeignKey(d => d.SpecialistsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Dialogs__Special__47DBAE45");
        });

        modelBuilder.Entity<Jautajums>(entity =>
        {
            entity.HasKey(e => e.JautajumsID).HasName("PK__Jautajum__42AB49203B688682");

            entity.Property(e => e.Saturs)
                .IsRequired()
                .HasColumnType("text");

            entity.HasOne(d => d.Tests).WithMany(p => p.Jautajums)
                .HasForeignKey(d => d.TestsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Jautajums__Tests__6C190EBB");
        });

        modelBuilder.Entity<Lietotajs>(entity =>
        {
            entity.HasKey(e => e.LietotajsID).HasName("PK__Lietotaj__70B93406BD1FA973");

            entity.HasIndex(e => e.Lietotajvards, "UQ__Lietotaj__FD0064119C183A73").IsUnique();

            entity.Property(e => e.DzimsanasGads).HasColumnType("date");
            entity.Property(e => e.Epasts)
                .IsRequired()
                .HasMaxLength(254);
            entity.Property(e => e.GooglePilnvara).HasColumnType("text");
            entity.Property(e => e.Lietotajvards)
                .IsRequired()
                .HasMaxLength(30);
            entity.Property(e => e.Parole)
                .IsRequired()
                .HasMaxLength(64)
                .IsFixedLength();
            entity.Property(e => e.Uzvards)
                .IsRequired()
                .HasMaxLength(30);
            entity.Property(e => e.Vards)
                .IsRequired()
                .HasMaxLength(30);

            entity.HasMany(d => d.Atbilde).WithMany(p => p.Lietotajs)
                .UsingEntity<Dictionary<string, object>>(
                    "LietotajsAtbilde",
                    r => r.HasOne<Atbilde>().WithMany()
                        .HasForeignKey("AtbildeID")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Lietotajs__Atbil__73BA3083"),
                    l => l.HasOne<Lietotajs>().WithMany()
                        .HasForeignKey("LietotajsID")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Lietotajs__Lieto__72C60C4A"),
                    j =>
                    {
                        j.HasKey("LietotajsID", "AtbildeID").HasName("LietotajsAtbildeID");
                    });

            entity.HasMany(d => d.Nozare).WithMany(p => p.Specialists)
                .UsingEntity<Dictionary<string, object>>(
                    "SpecialistsNozare",
                    r => r.HasOne<Nozare>().WithMany()
                        .HasForeignKey("NozareID")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Specialis__Nozar__5535A963"),
                    l => l.HasOne<Lietotajs>().WithMany()
                        .HasForeignKey("SpecialistsID")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Specialis__Speci__5441852A"),
                    j =>
                    {
                        j.HasKey("SpecialistsID", "NozareID").HasName("SpecialistsNozareID");
                    });
        });

        modelBuilder.Entity<LietotajsLoma>(entity =>
        {
            entity.HasKey(e => e.LietotajsLomaID).HasName("PK__Lietotaj__8607944642009C84");

            entity.Property(e => e.LietotajsLomaID).ValueGeneratedNever();
            entity.Property(e => e.LomaNosaukums)
                .IsRequired()
                .HasMaxLength(30);

            entity.HasOne(d => d.Lietotajs).WithMany(p => p.LietotajsLoma)
                .HasForeignKey(d => d.LietotajsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Lietotajs__Lieto__3C69FB99");

            entity.HasOne(d => d.LomaNosaukumsNavigation).WithMany(p => p.LietotajsLoma)
                .HasForeignKey(d => d.LomaNosaukums)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Lietotajs__LomaN__3D5E1FD2");
        });

        modelBuilder.Entity<LietotajsRakstsKomentars>(entity =>
        {
            entity.HasKey(e => new { e.LietotajsID, e.RakstsID }).HasName("LietotajsRakstsKomentarsID");

            entity.Property(e => e.DatumsUnLaiks).HasColumnType("datetime");
            entity.Property(e => e.Saturs)
                .IsRequired()
                .HasColumnType("text");

            entity.HasOne(d => d.Lietotajs).WithMany(p => p.LietotajsRakstsKomentars)
                .HasForeignKey(d => d.LietotajsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Lietotajs__Lieto__5DCAEF64");

            entity.HasOne(d => d.Raksts).WithMany(p => p.LietotajsRakstsKomentars)
                .HasForeignKey(d => d.RakstsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Lietotajs__Rakst__5EBF139D");
        });

        modelBuilder.Entity<LietotajsRakstsVertejums>(entity =>
        {
            entity.HasKey(e => new { e.LietotajsID, e.RakstsID }).HasName("LietotajsRakstsVertejumsID");

            entity.HasOne(d => d.Lietotajs).WithMany(p => p.LietotajsRakstsVertejums)
                .HasForeignKey(d => d.LietotajsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Lietotajs__Lieto__656C112C");

            entity.HasOne(d => d.Raksts).WithMany(p => p.LietotajsRakstsVertejums)
                .HasForeignKey(d => d.RakstsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Lietotajs__Rakst__66603565");
        });

        modelBuilder.Entity<LietotajsSpecialists>(entity =>
        {
            entity.HasKey(e => new { e.LietotajsID, e.SpecialistsID }).HasName("LietotajsSpecialistsID");

            entity.HasOne(d => d.Lietotajs).WithMany(p => p.LietotajsSpecialistsLietotajs)
                .HasForeignKey(d => d.LietotajsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Lietotajs__Lieto__619B8048");

            entity.HasOne(d => d.Specialists).WithMany(p => p.LietotajsSpecialistsSpecialists)
                .HasForeignKey(d => d.SpecialistsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Lietotajs__Speci__628FA481");
        });

        modelBuilder.Entity<LietotajsSpecialistsVertejums>(entity =>
        {
            entity.HasKey(e => new { e.LietotajsID, e.SpecialistsID }).HasName("LietotajsSpecialistsVertejumsID");

            entity.HasOne(d => d.Lietotajs).WithMany(p => p.LietotajsSpecialistsVertejumsLietotajs)
                .HasForeignKey(d => d.LietotajsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Lietotajs__Lieto__4316F928");

            entity.HasOne(d => d.Specialists).WithMany(p => p.LietotajsSpecialistsVertejumsSpecialists)
                .HasForeignKey(d => d.SpecialistsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Lietotajs__Speci__440B1D61");
        });

        modelBuilder.Entity<Loma>(entity =>
        {
            entity.HasKey(e => e.LomaNosaukums).HasName("PK__Loma__3AB8408CE27A5A9A");

            entity.Property(e => e.LomaNosaukums).HasMaxLength(30);
            entity.Property(e => e.Apraksts)
                .IsRequired()
                .HasColumnType("text");
        });

        modelBuilder.Entity<Nodarbiba>(entity =>
        {
            entity.HasKey(e => e.NodarbibaID).HasName("PK__Nodarbib__406B1BA152D62645");

            entity.Property(e => e.Beigas).HasColumnType("datetime");
            entity.Property(e => e.Sakums).HasColumnType("datetime");

            entity.HasOne(d => d.Lietotajs).WithMany(p => p.NodarbibaLietotajs)
                .HasForeignKey(d => d.LietotajsID)
                .HasConstraintName("FK__Nodarbiba__Lieto__4BAC3F29");

            entity.HasOne(d => d.Specialists).WithMany(p => p.NodarbibaSpecialists)
                .HasForeignKey(d => d.SpecialistsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Nodarbiba__Speci__4AB81AF0");
        });

        modelBuilder.Entity<Nozare>(entity =>
        {
            entity.HasKey(e => e.NozareID).HasName("PK__Nozare__41508836C4FD488A");

            entity.Property(e => e.Nosaukums)
                .IsRequired()
                .HasMaxLength(30);
        });

        modelBuilder.Entity<Problema>(entity =>
        {
            entity.HasKey(e => e.ProblemaID).HasName("PK__Problema__498C544EF07FB80B");

            entity.Property(e => e.Apraksts)
                .IsRequired()
                .HasColumnType("text");

            entity.HasOne(d => d.Nozare).WithMany(p => p.Problema)
                .HasForeignKey(d => d.NozareID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Problema__Nozare__5812160E");
        });

        modelBuilder.Entity<Raksts>(entity =>
        {
            entity.HasKey(e => e.RakstsID).HasName("PK__Raksts__02D56CB068A78222");

            entity.Property(e => e.DatumsUnLaiks).HasColumnType("datetime");
            entity.Property(e => e.Saturs)
                .IsRequired()
                .HasColumnType("text");
            entity.Property(e => e.Virsraksts)
                .IsRequired()
                .HasMaxLength(30);

            entity.HasOne(d => d.Specialists).WithMany(p => p.Raksts)
                .HasForeignKey(d => d.SpecialistsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Raksts__Speciali__5AEE82B9");
        });

        modelBuilder.Entity<SajutuNovertejums>(entity =>
        {
            entity.HasKey(e => e.IerakstsID).HasName("PK__SajutuNo__E8D112DD610B63AB");

            entity.Property(e => e.DatumsUnLaiks).HasColumnType("datetime");
            entity.Property(e => e.SajutuNovertejums1).HasColumnName("SajutuNovertejums");
            entity.Property(e => e.Saturs)
                .IsRequired()
                .HasColumnType("text");

            entity.HasOne(d => d.Lietotajs).WithMany(p => p.SajutuNovertejums)
                .HasForeignKey(d => d.LietotajsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__SajutuNov__Lieto__403A8C7D");
        });

        modelBuilder.Entity<Tests>(entity =>
        {
            entity.HasKey(e => e.TestsID).HasName("PK__Tests__A208744B7FE4A418");

            entity.Property(e => e.Apraksts)
                .IsRequired()
                .HasColumnType("text");

            entity.HasOne(d => d.Autors).WithMany(p => p.Tests)
                .HasForeignKey(d => d.AutorsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Tests__AutorsID__693CA210");
        });

        modelBuilder.Entity<Zina>(entity =>
        {
            entity.HasKey(e => e.ZinaID).HasName("PK__Zina__0D3B510BA31CE948");

            entity.Property(e => e.DatumsUnLaiks).HasColumnType("datetime");
            entity.Property(e => e.Saturs)
                .IsRequired()
                .HasColumnType("text");

            entity.HasOne(d => d.Autors).WithMany(p => p.Zina)
                .HasForeignKey(d => d.AutorsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Zina__AutorsID__4F7CD00D");

            entity.HasOne(d => d.Dialogs).WithMany(p => p.Zina)
                .HasForeignKey(d => d.DialogsID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Zina__DialogsID__4E88ABD4");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}